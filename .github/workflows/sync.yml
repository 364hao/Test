name: Run
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions: write-all
jobs:
  Sync_Data:
    runs-on: windows-latest
    strategy:
      fail-fast: true
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - run: |
        git clone https://github.com/westhecool/python-apkpure.git --depth 1
        git clone https://github.com/364hao/Phigros_Resource.git --depth 1
        git clone https://github.com/Ivan-1F/phichain.git --depth 1
    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: x86_64-pc-windows-msvc
        components: rustfmt, clippy
    - name: Build Phichain
      run: |
        cd phichain
        cargo build -p phichain-converter --release --target x86_64-pc-windows-msvc
        move target/x86_64-pc-windows-msvc/release/phichain-converter.exe ../phichain-converter.exe
      env:
        RUST_BACKTRACE: 1
    - name: Download Phigros Package
      run: |
        cd python-apkpure
        pip install --upgrade pip
        pip install -r requirements.txt
        python cli.py download com.PigeonGames.Phigros --output-file Phigros.xapk
    - name: Extra Phigros Package
      uses: DuckSoft/extract-7z-action@v1.0
      with:
        pathSource: python-apkpure/Phigros.xapk
        pathTarget: Phigros_Resource
    - name: Release Assests
      run: |
        cd Phigros_Resource
        pip install UnityPy==1.10.18 fsb5 rich==13.8.1
        python gameInformation.py com.PigeonGames.Phigros.apk
        python resource.py Android/obb/com.PigeonGames.Phigros
      env:
        PYTHONIOENCODING: utf-8
    - name: Convert Charts
      run: |
        python ChartConvert.py
        python PhichainMove.py
      env:
        PYTHONIOENCODING: utf-8
    - name: Generate Phira Charts
      run: |
        cd Phigros_Resource
        python phira.py --phira
      env:
        PYTHONIOENCODING: utf-8
    - name: Upload Assests
      run: |
        pip install PyGithub
        python UploadRelease.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYTHONIOENCODING: utf-8
    - uses: actions/upload-artifact@v4
      with:
        path: ./
    - name: Setup mdBook
      uses: peaceiris/actions-mdbook@v2
      with:
        mdbook-version: 'latest'
    - name: Build Documentation
      run: |
        mdbook build
      env:
        PYTHONIOENCODING: utf-8
    - name: Deploy Documentation
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./book